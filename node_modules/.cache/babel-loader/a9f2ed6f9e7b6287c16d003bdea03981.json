{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable no-constant-condition */\n\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId } from '@mui/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions() {\n  let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, _ref) => {\n    let {\n      inputValue,\n      getOptionLabel\n    } = _ref;\n    let input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    const filteredOptions = options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE11 support.\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nconst pageSize = 5;\nexport default function useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    disabled: disabledProp,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    isOptionEqualToValue = (option, value) => option === value,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n\n      return String(optionLabel);\n    }\n\n    return optionLabel;\n  };\n\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n\n    let newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValueState(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const prevValue = React.useRef();\n  React.useEffect(() => {\n    const valueChange = value !== prevValue.current;\n    prevValue.current = value;\n\n    if (focused && !valueChange) {\n      return;\n    } // Only reset the input's value when freeSolo if the component's value changes.\n\n\n    if (freeSolo && !valueChange) {\n      return;\n    }\n\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, prevValue, freeSolo]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const setHighlightedIndex = useEventCallback(_ref2 => {\n    let {\n      event,\n      index,\n      reason = 'auto'\n    } = _ref2;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    const prev = listboxRef.current.querySelector('[role=\"option\"].Mui-focused');\n\n    if (prev) {\n      prev.classList.remove('Mui-focused');\n      prev.classList.remove('Mui-focusVisible');\n    }\n\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n\n    if (!option) {\n      return;\n    }\n\n    option.classList.add('Mui-focused');\n\n    if (reason === 'keyboard') {\n      option.classList.add('Mui-focusVisible');\n    } // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(_ref3 => {\n    let {\n      event,\n      diff,\n      direction = 'next',\n      reason = 'auto'\n    } = _ref3;\n\n    if (!popupOpen) {\n      return;\n    }\n\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      const newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n      }\n    }, [componentName]);\n  }\n\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n    setInputPristine(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  const handleValue = (event, newValue, reason, details) => {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValueState(newValue);\n  };\n\n  const isTouch = React.useRef(false);\n\n  const selectNewValue = function (event, option) {\n    let reasonProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'selectOption';\n    let origin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'options';\n    let reason = reasonProp;\n    let newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    let nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    } // Wait until IME is settled.\n\n\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // Avoid early form validation, let the end-users continue filling the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'selectOption'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  const handleClick = () => {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n\n  return {\n    getRootProps: function () {\n      let other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': listboxAvailable ? `${id}-listbox` : null,\n        role: 'combobox',\n        'aria-expanded': listboxAvailable\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : null,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: _ref4 => {\n      let {\n        index\n      } = _ref4;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: _ref5 => {\n      let {\n        index,\n        option\n      } = _ref5;\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_setRef","setRef","unstable_useEventCallback","useEventCallback","unstable_useControlled","useControlled","unstable_useId","useId","stripDiacritics","string","normalize","replace","createFilterOptions","config","ignoreAccents","ignoreCase","limit","matchFrom","stringify","trim","options","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","findIndex","array","comp","i","length","defaultFilterOptions","pageSize","useAutocomplete","props","autoComplete","autoHighlight","autoSelect","blurOnSelect","disabled","disabledProp","clearOnBlur","freeSolo","clearOnEscape","componentName","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","_option$label","label","isOptionEqualToValue","value","groupBy","handleHomeEndKeys","id","idProp","includeInputInList","inputValueProp","onChange","onClose","onHighlightChange","onInputChange","onOpen","open","openProp","openOnFocus","selectOnFocus","valueProp","optionLabel","process","env","NODE_ENV","erroneousReturn","undefined","console","error","JSON","String","ignoreFocus","useRef","firstFocus","inputRef","listboxRef","anchorEl","setAnchorEl","useState","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","setValueState","controlled","default","name","setInputValueState","state","focused","setFocused","resetInputValue","useCallback","event","newValue","isOptionSelected","newInputValue","prevValue","useEffect","valueChange","current","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","value2","listboxAvailable","missingValue","warn","join","focusTag","tagToFocus","focus","querySelector","validOptionIndex","index","direction","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","setHighlightedIndex","reason","removeAttribute","setAttribute","prev","classList","remove","listboxNode","parentElement","scrollTop","add","scrollHeight","clientHeight","element","scrollBottom","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","diff","getNextIndex","maxIndex","newIndex","Math","abs","nextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","nodeName","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","Array","isArray","matches","push","splice","ctrlKey","metaKey","blur","validTagIndex","handleFocusTag","nextTag","handleClear","handleKeyDown","other","onKeyDown","defaultMuiPrevented","key","which","preventDefault","stopPropagation","handleFocus","handleBlur","contains","document","activeElement","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","indexBy","Map","reduce","acc","group","get","set","getRootProps","role","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","ref","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","onDelete","getListboxProps","getOptionProps","selected","onMouseOver","onTouchStart"],"sources":["E:/converge2-main/node_modules/@mui/core/AutocompleteUnstyled/useAutocomplete.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId } from '@mui/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    const filteredOptions = options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE11 support.\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nconst pageSize = 5;\nexport default function useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    disabled: disabledProp,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    isOptionEqualToValue = (option, value) => option === value,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n\n      return String(optionLabel);\n    }\n\n    return optionLabel;\n  };\n\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n\n    let newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValueState(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const prevValue = React.useRef();\n  React.useEffect(() => {\n    const valueChange = value !== prevValue.current;\n    prevValue.current = value;\n\n    if (focused && !valueChange) {\n      return;\n    } // Only reset the input's value when freeSolo if the component's value changes.\n\n\n    if (freeSolo && !valueChange) {\n      return;\n    }\n\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, prevValue, freeSolo]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    const prev = listboxRef.current.querySelector('[role=\"option\"].Mui-focused');\n\n    if (prev) {\n      prev.classList.remove('Mui-focused');\n      prev.classList.remove('Mui-focusVisible');\n    }\n\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n\n    if (!option) {\n      return;\n    }\n\n    option.classList.add('Mui-focused');\n\n    if (reason === 'keyboard') {\n      option.classList.add('Mui-focusVisible');\n    } // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      const newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n      }\n    }, [componentName]);\n  }\n\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n    setInputPristine(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  const handleValue = (event, newValue, reason, details) => {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValueState(newValue);\n  };\n\n  const isTouch = React.useRef(false);\n\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    let nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    } // Wait until IME is settled.\n\n\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // Avoid early form validation, let the end-users continue filling the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'selectOption'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  const handleClick = () => {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null,\n      role: 'combobox',\n      'aria-expanded': listboxAvailable\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : null,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => ({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1,\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}