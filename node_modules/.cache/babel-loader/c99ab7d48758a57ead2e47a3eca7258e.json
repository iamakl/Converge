{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"onEnter\", \"onExited\"],\n      _excluded2 = [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport ClickAwayListener from '@mui/core/ClickAwayListener';\nimport styled from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport { duration } from '../styles/createTransitions';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    anchorOrigin\n  } = ownerState;\n  const slots = {\n    root: ['root', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`]\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\n};\n\nconst SnackbarRoot = styled('div', {\n  name: 'MuiSnackbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}`]];\n  }\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n\n  const center = _extends({}, !ownerState.isRtl && {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  }, ownerState.isRtl && {\n    right: '50%',\n    left: 'auto',\n    transform: 'translateX(50%)'\n  });\n\n  return _extends({\n    zIndex: theme.zIndex.snackbar,\n    position: 'fixed',\n    display: 'flex',\n    left: 8,\n    right: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }, ownerState.anchorOrigin.vertical === 'top' ? {\n    top: 8\n  } : {\n    bottom: 8\n  }, ownerState.anchorOrigin.horizontal === 'left' && {\n    justifyContent: 'flex-start'\n  }, ownerState.anchorOrigin.horizontal === 'right' && {\n    justifyContent: 'flex-end'\n  }, {\n    [theme.breakpoints.up('sm')]: _extends({}, ownerState.anchorOrigin.vertical === 'top' ? {\n      top: 24\n    } : {\n      bottom: 24\n    }, ownerState.anchorOrigin.horizontal === 'center' && center, ownerState.anchorOrigin.horizontal === 'left' && _extends({}, !ownerState.isRtl && {\n      left: 24,\n      right: 'auto'\n    }, ownerState.isRtl && {\n      right: 24,\n      left: 'auto'\n    }), ownerState.anchorOrigin.horizontal === 'right' && _extends({}, !ownerState.isRtl && {\n      right: 24,\n      left: 'auto'\n    }, ownerState.isRtl && {\n      left: 24,\n      right: 'auto'\n    }))\n  });\n});\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbar'\n  });\n\n  const {\n    action,\n    anchorOrigin: {\n      vertical,\n      horizontal\n    } = {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    autoHideDuration = null,\n    children,\n    className,\n    ClickAwayListenerProps,\n    ContentProps,\n    disableWindowBlurListener = false,\n    message,\n    onClose,\n    onMouseEnter,\n    onMouseLeave,\n    open,\n    resumeHideDuration,\n    TransitionComponent = Grow,\n    transitionDuration = {\n      enter: duration.enteringScreen,\n      exit: duration.leavingScreen\n    },\n    TransitionProps: {\n      onEnter,\n      onExited\n    } = {}\n  } = props,\n        TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded),\n        other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  const theme = useTheme();\n  const isRtl = theme.direction === 'rtl';\n\n  const ownerState = _extends({}, props, {\n    anchorOrigin: {\n      vertical,\n      horizontal\n    },\n    isRtl\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const timerAutoHide = React.useRef();\n  const [exited, setExited] = React.useState(true);\n  const handleClose = useEventCallback(function () {\n    if (onClose) {\n      onClose(...arguments);\n    }\n  });\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(() => {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return () => {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  const handlePause = () => {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  const handleMouseEnter = event => {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  const handleMouseLeave = event => {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  const handleClickAway = event => {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  const handleExited = node => {\n    setExited(true);\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    setExited(false);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  React.useEffect(() => {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(SnackbarRoot, _extends({\n      className: clsx(classes.root, className),\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      ownerState: ownerState,\n      ref: ref\n    }, other, {\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n        appear: true,\n        in: open,\n        timeout: transitionDuration,\n        direction: vertical === 'top' ? 'down' : 'up',\n        onEnter: handleEnter,\n        onExited: handleExited\n      }, TransitionProps, {\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, _extends({\n          message: message,\n          action: action\n        }, ContentProps))\n      }))\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: () => null,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any>} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: duration.enteringScreen,\n   *   exit: duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Snackbar;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","_excluded2","React","PropTypes","clsx","unstable_composeClasses","composeClasses","ClickAwayListener","styled","useTheme","useThemeProps","duration","useEventCallback","capitalize","Grow","SnackbarContent","getSnackbarUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","classes","anchorOrigin","slots","root","vertical","horizontal","SnackbarRoot","name","slot","overridesResolver","props","styles","theme","center","isRtl","left","right","transform","zIndex","snackbar","position","display","justifyContent","alignItems","top","bottom","breakpoints","up","Snackbar","forwardRef","inProps","ref","action","autoHideDuration","children","className","ClickAwayListenerProps","ContentProps","disableWindowBlurListener","message","onClose","onMouseEnter","onMouseLeave","open","resumeHideDuration","TransitionComponent","transitionDuration","enter","enteringScreen","exit","leavingScreen","TransitionProps","onEnter","onExited","other","direction","timerAutoHide","useRef","exited","setExited","useState","handleClose","setAutoHideTimer","autoHideDurationParam","clearTimeout","current","setTimeout","useEffect","handlePause","handleResume","useCallback","handleMouseEnter","event","handleMouseLeave","handleClickAway","handleExited","node","handleEnter","isAppearing","window","addEventListener","removeEventListener","undefined","onClickAway","appear","in","timeout","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","number","element","object","string","bool","key","func","sx","oneOfType","elementType"],"sources":["E:/converge2-main/node_modules/@mui/material/Snackbar/Snackbar.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"onEnter\", \"onExited\"],\n      _excluded2 = [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport ClickAwayListener from '@mui/core/ClickAwayListener';\nimport styled from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport { duration } from '../styles/createTransitions';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    anchorOrigin\n  } = ownerState;\n  const slots = {\n    root: ['root', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`]\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\n};\n\nconst SnackbarRoot = styled('div', {\n  name: 'MuiSnackbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const center = _extends({}, !ownerState.isRtl && {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  }, ownerState.isRtl && {\n    right: '50%',\n    left: 'auto',\n    transform: 'translateX(50%)'\n  });\n\n  return _extends({\n    zIndex: theme.zIndex.snackbar,\n    position: 'fixed',\n    display: 'flex',\n    left: 8,\n    right: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }, ownerState.anchorOrigin.vertical === 'top' ? {\n    top: 8\n  } : {\n    bottom: 8\n  }, ownerState.anchorOrigin.horizontal === 'left' && {\n    justifyContent: 'flex-start'\n  }, ownerState.anchorOrigin.horizontal === 'right' && {\n    justifyContent: 'flex-end'\n  }, {\n    [theme.breakpoints.up('sm')]: _extends({}, ownerState.anchorOrigin.vertical === 'top' ? {\n      top: 24\n    } : {\n      bottom: 24\n    }, ownerState.anchorOrigin.horizontal === 'center' && center, ownerState.anchorOrigin.horizontal === 'left' && _extends({}, !ownerState.isRtl && {\n      left: 24,\n      right: 'auto'\n    }, ownerState.isRtl && {\n      right: 24,\n      left: 'auto'\n    }), ownerState.anchorOrigin.horizontal === 'right' && _extends({}, !ownerState.isRtl && {\n      right: 24,\n      left: 'auto'\n    }, ownerState.isRtl && {\n      left: 24,\n      right: 'auto'\n    }))\n  });\n});\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbar'\n  });\n\n  const {\n    action,\n    anchorOrigin: {\n      vertical,\n      horizontal\n    } = {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    autoHideDuration = null,\n    children,\n    className,\n    ClickAwayListenerProps,\n    ContentProps,\n    disableWindowBlurListener = false,\n    message,\n    onClose,\n    onMouseEnter,\n    onMouseLeave,\n    open,\n    resumeHideDuration,\n    TransitionComponent = Grow,\n    transitionDuration = {\n      enter: duration.enteringScreen,\n      exit: duration.leavingScreen\n    },\n    TransitionProps: {\n      onEnter,\n      onExited\n    } = {}\n  } = props,\n        TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded),\n        other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  const theme = useTheme();\n  const isRtl = theme.direction === 'rtl';\n\n  const ownerState = _extends({}, props, {\n    anchorOrigin: {\n      vertical,\n      horizontal\n    },\n    isRtl\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const timerAutoHide = React.useRef();\n  const [exited, setExited] = React.useState(true);\n  const handleClose = useEventCallback((...args) => {\n    if (onClose) {\n      onClose(...args);\n    }\n  });\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(() => {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return () => {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  const handlePause = () => {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  const handleMouseEnter = event => {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  const handleMouseLeave = event => {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  const handleClickAway = event => {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  const handleExited = node => {\n    setExited(true);\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    setExited(false);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  React.useEffect(() => {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(SnackbarRoot, _extends({\n      className: clsx(classes.root, className),\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      ownerState: ownerState,\n      ref: ref\n    }, other, {\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n        appear: true,\n        in: open,\n        timeout: transitionDuration,\n        direction: vertical === 'top' ? 'down' : 'up',\n        onEnter: handleEnter,\n        onExited: handleExited\n      }, TransitionProps, {\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, _extends({\n          message: message,\n          action: action\n        }, ContentProps))\n      }))\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: () => null,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any>} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: duration.enteringScreen,\n   *   exit: duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Snackbar;"],"mappings":"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"},"metadata":{},"sourceType":"module"}